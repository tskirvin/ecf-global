#!/bin/bash
# puppet-relock - re-lock puppet with new text but the old message is
# saved, yes this can get long

#########################################################################
### Configuration #######################################################
#########################################################################

if test -f /opt/ssi/etc/puppetreport; then
    . /opt/ssi/etc/puppetreport
fi

LOCKFILE=${PUPPET_LOCK_FILE:-/opt/puppetlabs/puppet/cache/state/agent_disabled.lock}

#########################################################################
### main () #############################################################
#########################################################################

ME=$(klist | grep Default | cut -d: -f2 | cut -d@ -f1 | tr -d ' \n')
if [[ $ME == "" ]]; then
    ME="unknown"
fi

## Parse command-line variables
TEMP=`/usr/bin/getopt -n "$0" \
    -o h \
    --long hours:,help,man,me: \
    -- "$@"`

if [ $? != 0 ] ; then
    echo "getopt failed..." >&2 ;
    exit -1
fi

eval set -- "$TEMP"

while true; do
    case "$1" in
        -h|--help|--man)
            exec pod2text $0
            exit 0
            ;;
        --me)
            ME="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "unknown argument: $1"
            exec pod2text $0
            exit -1
    esac
done

TEXT="$@"
if [[ -z $TEXT ]] ; then
    exec pod2text $0
    exit -1
fi

if [ -f "$LOCKFILE" ] ; then
    MSG=$(cat "${LOCKFILE}" | jq .disabled_message | sed -e s/\"//g)
    LOCKAGE=$(date +%Y-%m-%d -r "$LOCKFILE")
    TEXT="${MSG} (re-locked from ${LOCKAGE} by ${ME}: ${TEXT})"
else
    echo "no ${LOCKFILE}, puppet was not locked, will lock now"
    TEXT="${TEXT} - ${ME}"
fi

echo "puppet agent --enable; puppet agent --disable ${TEXT}" \
    | logger -s -t $(basename "$0")
puppet agent --enable; puppet agent --disable "$TEXT" \
    | logger -s -t $(basename "$0")

#########################################################################
### Documentation #######################################################
#########################################################################

# Documentation.  Use a hack to hide this from the shell.  Because of the
# above exit line, this should never be executed.

DOCS=<<__END_OF_DOCS__

=head1 NAME

puppet-relock - unlock and then re-lock puppet, saving the message

=head1 SYNOPSIS

puppet-relock "not ready yet"

puppet-temlock --me USERNAME "not ready yet, talk to FOO"

=head1 DESCRIPTION

puppet-relock unlocks puppet (if locked), then locks it with a reason.

=head1 OPTIONS

=over 4

=item B<--me> I<USERNAME>

By default we'll try to get information about who you are from your
kerberos credentials.  Failing that, it's 'unknown'.  This allows an
override.

=item B<--help>, B<--man>

Print this help page.

=back

=head1 AUTHOR

Tim Skirvin <tskirvin@fnal.gov>

=head1 LICENSE

Copyright 2023-, Fermi National Accelerator Laboratory

This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.

=cut

__END_OF_DOCS__
